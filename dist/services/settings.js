class SettingsManager{constructor(){return SettingsManager.instance||(logger(this,"Instanciating empty SettingsManager"),SettingsManager.instance=this,this.init()),SettingsManager.instance}async init(){this.profile={focused:!1,relaxed:!0,customized:!1},this.settings={memory:{cache_size:5,min_time_full_stats_update:1000,min_time_garbage_collector:5000},policy:{target_tabs:12,score_threshold:50,decay:.8,min_time:3000,active:!1,pinned:!1,audible:!1},scorer:{min_active:3000,protection_time:300000,cached_decay:.7}}}async reset(){this.init(),await this.save()}async save(){logger(this,"Saved"),await storageSet({tabby_settings:this.settings,tabby_profile:this.profile})}async load(){await storageGet(["tabby_settings","tabby_profile"]).then(a=>{try{logger(this,"Loading settings from storage"),"undefined"==typeof a.tabby_settings?(logger(this,"SETTINGS ARE UNDEFINED"),this.reset()):(logger(this,"SETTINGS ARE NOT UNDEFINED"),console.log("data",JSON.stringify(a.tabby_settings)),this.settings=a.tabby_settings,this.profile=a.tabby_profile)}catch(a){logger(this,"Loading settings fail"),this.reset()}})}async updateSettings(a){this.settings=a,await this.save()}async updateSettingsProfile(a){this.profile=a,a.focused?this.settings.policy.target_tabs=5:a.relaxed&&(this.settings.policy.target_tabs=12),await this.save()}}var settingsManager=new SettingsManager;
class SettingsManager{constructor(){return SettingsManager.instance||(logger(this,"Instanciating empty SettingsManager"),SettingsManager.instance=this,this.initProfiles(),this.load()),SettingsManager.instance}async init(){this.active_profile=RELAXED,this.settings=INIT_RELAXED_PROFILE}async initProfiles(){this.profiles={focused:INIT_FOCUSED_PROFILE,relaxed:INIT_RELAXED_PROFILE}}async reset(){this.init(),this.initProfiles(),await this.save()}async save(){logger(this,"Saved"),await storageSet({tabby_settings:this.settings,tabby_profiles:this.profiles,tabby_active_profile:this.active_profile})}async load(){await storageGet(["tabby_settings","tabby_active_profile"]).then(a=>{try{logger(this,"Loading settings from storage"),"undefined"!=typeof a.tabby_settings&&"undefined"!=typeof a.tabby_active_profile?(this.settings=a.tabby_settings,this.active_profile=a.tabby_active_profile):this.reset()}catch(a){logger(this,"Loading settings fail"),this.reset()}})}async updateSettings(a){this.settings=a,await this.save()}async updateSettingsProfile(a){this.active_profile=a,a!==CUSTOMIZED&&(this.settings=this.profiles[a]),await this.save()}}var settingsManager=new SettingsManager;
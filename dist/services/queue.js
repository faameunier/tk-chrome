function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class EventQueue{constructor(){return _defineProperty(this,"queue",[]),_defineProperty(this,"pendingPromise",!1),EventQueue.instance||(logger(this,"Instanciating empty EventQueue"),EventQueue.instance=this),EventQueue.instance}enqueue(a){return new Promise((b,c)=>{this.queue.push({promise:a,resolve:b,reject:c}),this.dequeue()})}dequeue(){if(this.workingOnPromise)return!1;const a=this.queue.shift();if(!a)return this.workingOnPromise=!0,logger(this,"Queue killed"),memoryManager.log().then(()=>{memoryManager.save().then(()=>{PolicyManager.run().then(()=>{0===this.queue.length?this.workingOnPromise=!1:(this.workingOnPromise=!1,this.dequeue())})})}),!1;try{this.workingOnPromise=!0,a.promise().then(b=>{logger(this,"Processing next event"),this.workingOnPromise=!1,a.resolve(b),this.dequeue()}).catch(b=>{this.workingOnPromise=!1,a.reject(b),this.dequeue()})}catch(b){this.workingOnPromise=!1,a.reject(b),this.dequeue()}return!0}}var eventQueue=new EventQueue;
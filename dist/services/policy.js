class PolicyManager{static async run(){let a=this.buildWindows();this.backfillRuns(a);let b=Object.keys(a),c=[];for(var d=0;d<b.length;d++)c.push(this.runWindow(a,b[d]));let e=await Promise.all(c),f=Date.now();// Running every windows update in parallel.
for(var d=0;d<b.length;d++)e[d]&&(// The policy ran on the i-th window
memoryManager.settings.policy.last_policy_runs[b[d]]=f)}static buildWindows(){return _.groupBy(memoryManager.tabs,a=>{a.windowId})}static backfillRuns(a){let b=Date.now(),c=Object.keys(memoryManager.settings.policy.last_policy_runs),d=Object.keys(a),e=_.difference(d,c);for(var f=0;f<e.length;f++)memoryManager.settings.policy.last_policy_runs[e[f]]=b}static async runWindow(a,b){return!!this.exponentialTrigger(a[b],b)}static exponentialTrigger(a,b){let c=a.length,d=memoryManager.settings.policy.last_policy_runs[b];return Date.now()-memoryManager.settings.policy.last_policy_runs[b]>=memoryManager.settings.policy.min_time*Math.pow(memoryManager.settings.policy.decay,Math.max(0,c-memoryManager.settings.policy.target_tabs))}}
class AbstractScorer{static async score(a){let b=this.scoreStatistics(a.statistics),c=this.scoreCache(a.cache),d=this.mergeScores([b].concat(c));return d}static scoreStatistics(){throw new Error("To be implemented")}static scoreCache(){throw new Error("To be implemented")}static mergeScores(){throw new Error("To be implemented")}}class RandomScorer extends AbstractScorer{static scoreStatistics(){return Math.random()}static scoreCache(){return[]}static mergeScores(a){return a[0]}}class Scorer{static score(a){if("random"===SCORER)return RandomScorer.score(a)}}
eventQueue.enqueue(()=>memoryManager.load()),chrome.runtime.onInstalled.addListener(function(){eventQueue.enqueue(()=>memoryManager.reset()),logger("Extention installed :D")}),chrome.tabs.onCreated.addListener(function(a){eventQueue.enqueue(()=>memoryManager.createTab(a))}),chrome.tabs.onUpdated.addListener(function(a,b,c){eventQueue.enqueue(()=>memoryManager.updateTab(a,b,c))}),chrome.tabs.onActivated.addListener(function(a){eventQueue.enqueue(()=>memoryManager.setActivated(a.tabId,a.windowId))}),chrome.tabs.onAttached.addListener(function(a,b){eventQueue.enqueue(()=>memoryManager.changeWindow(a,b.newWindowId))}),chrome.tabs.onRemoved.addListener(function(a,b){eventQueue.enqueue(()=>memoryManager.deleteTab(a,b.windowId,b.isWindowClosing))}),chrome.runtime.onMessage.addListener(function(a,b,c){function d(a){return new Promise((b,d)=>{try{b(c(a))}catch(a){d(a)}})}switch(a.messageType){case"RESTORE":eventQueue.enqueue(()=>memoryManager.restoreTab(a.tabId)),eventQueue.enqueue(()=>memoryManager.removeTabFromClosedHistory(a.tabId));break;case"SETTINGS":eventQueue.enqueue(()=>memoryManager.updateSettings(a.settings));break;default:}eventQueue.enqueue(()=>d({answer:1}))});